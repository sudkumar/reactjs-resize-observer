{"version":3,"sources":["webpack:///./docs/src/main.js","webpack:///./src/index.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./docs/src/App.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","render","Component","mountNode","document","getElementById","ReactDOM","default","createElement","module","hot","accept","App","React","_interopRequireWildcard","_resizeObserverPolyfill","ResizeObserver","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","ref","domRef","observer","observe","unobserve","onResize","props","Observer","entries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","value","target","err","return","innerDomRef","attachObserver","detachObserver","_this$props","children","componentClass","otherProps","_objectWithoutProperties","_extends","setDomRef","global","MapShim","Map","getIndex","arr","key","result","some","index","anonymous","__entries__","prototypeAccessors","size","configurable","get","prototype","set","push","delete","splice","has","clear","forEach","callback","ctx","i","list","Object","defineProperties","isBrowser","window","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","defineConfigurable","keys","defineProperty","enumerable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","this$1","observation","map","WeakMap","method","__webpack_exports__","g","eval","e","exports","_src","_ref","setState","JSON","stringify","state","className","placeholder","style","display","maxWidth","maxWidht","flex","background","handleResize"],"mappings":"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","file":"js/app.66fbbea6aae70bf69953.js","sourcesContent":["import React from 'react'\nimport ReactDOM from \"react-dom\"\n\nimport App from './App'\n\nfunction render (Component) {\n  const mountNode = document.getElementById('root')\n  ReactDOM.render(<Component />, mountNode)\n}\n\nif (module.hot) {\n  module.hot.accept('./App.js', function () {\n    const NextApp = require('./App.js').default\n    render(NextApp)\n  })\n}\n\nrender(App)\n\n\n\n// WEBPACK FOOTER //\n// ./docs/src/main.js","// @flow\nimport * as React from \"react\"\nimport { default as Observer } from 'resize-observer-polyfill'\n\ntype entryType = {\n  target: HTMLElement,\n  contentRect: {\n    top: number,\n    left: number,\n    bottom: number,\n    right: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  }\n}\n\ntype entriesType = Array<entryType>\n\ninterface ObserverInterface {\n  constructor((entries: entriesType) => void): void;\n  observe(target: ?HTMLElement): void;\n  unobserve(target: ?HTMLElement): void;\n}\n\ntype Props = {\n  children: React.Node,\n  componentClass: string, // value to which counter should go, start from 0\n  innerDomRef: (ref: ?HTMLElement) => void,\n  onResize: (entry: entryType) => void,\n}\ntype State = {\n  count: number\n}\n\nexport class ResizeObserver extends React.Component<Props, State> {\n  static defaultProps = {\n    componentClass: 'div',\n  }\n  observer: ObserverInterface\n  domRef: ?HTMLElement\n\n  constructor (...args: any) {\n    super(...args)\n    const { onResize } = this.props\n    this.observer = ((new Observer((entries) => {\n      for (let entry of entries) {\n        entry = ((entry: any): entryType)\n        if (entry.target === this.domRef) {\n          // fire the onResize event\n          onResize(entry)\n          break;\n        }\n      }\n    }): any): ObserverInterface)\n  }\n  componentDidMount () {\n    const { innerDomRef } = this.props\n    this.attachObserver()\n    innerDomRef && innerDomRef(this.domRef)\n  }\n  componentWillUnmount () {\n    this.detachObserver()\n  }\n  render () {\n    const { children, componentClass: Component, onResize, innerDomRef, ...otherProps } = this.props\n    return <Component {...otherProps} ref={this.setDomRef}>\n      {children}\n    </Component>\n  }\n\n  setDomRef = (ref: ?HTMLElement): void => {\n    this.domRef = ref\n  }\n  attachObserver = (): void => {\n    this.observer.observe(this.domRef)\n  }\n\n  detachObserver = (): void => {\n    this.observer.unobserve(this.domRef)\n  }\n}\n\nexport default ResizeObserver\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 29\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 30\n// module chunks = 1","import React from \"react\"\nimport ResizeObserver from \"./../../src\"\n\nclass App extends React.Component {\n  state = {\n    contentRect: null\n  }\n  handleResize = ({ target, contentRect }) => {\n    this.setState({\n      contentRect: JSON.stringify(contentRect),\n    })\n  }\n  render () {\n    const { contentRect } = this.state\n    return <div>\n      <div className=\"hero text-center\">\n        <h1>\n          Rexze obser for a DOM component\n        </h1>\n      </div>\n      <p className='text-center'>Element with background color is wrapped inside Resize Observer component</p>\n      <textarea placeholder='resize it. this will NOT trigger the resizing of out element.'></textarea>\n      <div style={{ display: 'flex'}}>\n        <div style={{\n          maxWidth: '50%',\n        }}>\n          <textarea placeholder='resize it. this is an side element to our resizer observer' style={{ maxWidht: '100%'}}></textarea>\n        </div>\n        <div style={{\n          flex: 1,\n        }}>\n          <ResizeObserver\n            style={{\n              background: 'gainsboro'\n            }}\n            onResize={this.handleResize}>\n            <textarea placeholder='resize it. this is inside our resize observer'></textarea>\n            <div>\n              {contentRect}\n            </div>\n          </ResizeObserver>\n        </div>\n      </div>\n    </div>\n  }\n}\n\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// ./docs/src/App.js"],"sourceRoot":""}